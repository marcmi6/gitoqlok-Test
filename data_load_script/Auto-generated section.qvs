///$tab Auto-generated section
///$autogenerated
Set dataManagerTables = '','Export Worksheet';
//This block renames script tables from non generated section which conflict with the names of managed tables

For each name in $(dataManagerTables) 
    Let index = 0;
    Let currentName = name; 
    Let tableNumber = TableNumber(name); 
    Let matches = 0; 
    Do while not IsNull(tableNumber) or (index > 0 and matches > 0)
        index = index + 1; 
        currentName = name & '-' & index; 
        tableNumber = TableNumber(currentName) 
        matches = Match('$(currentName)', $(dataManagerTables));
    Loop 
    If index > 0 then 
            Rename Table '$(name)' to '$(currentName)'; 
    EndIf; 
Next; 
Set dataManagerTables = ;


Unqualify *;

__countryGeoBase:
LOAD
	ISO3Code AS [__ISO3Code],
	ISO2Code AS [__ISO2Code],
	Polygon AS [__Polygon]
FROM [lib://AttachedFiles/countryGeo.qvd]
(qvd);

__countryCodeIsoTwo2Polygon:
MAPPING LOAD
	__ISO2Code,
	__Polygon
RESIDENT __countryGeoBase;

[Export Worksheet]:
LOAD
	[STATION_NUMBER],
	[STATION_DESCRIPTION],
	[PART_NUMBER],
	[SERIAL_NUMBER],
	[TEST_PLAN_NAME],
	[TEST_PLAN_VERSION],
	[TEST_STEP_NAME],
	[SEQUENCE_NUMBER],
	[BOOK_STAMP],
	[UNIT],
	[LOWER_LIMIT],
	[UPPER_LIMIT],
	[FAIL_CODE],
	[MEASURE_VALUE],
	APPLYMAP( '__countryCodeIsoTwo2Polygon', UPPER([UNIT]), '-') AS [Export Worksheet.UNIT_GeoInfo]
 FROM [lib://QlikSenseStorage/50_Data/FirstTest/217.858-00.xlsx]
(ooxml, embedded labels, table is [Export Worksheet]);



TAG FIELD [UNIT] WITH '$geoname', '$relates_Export Worksheet.UNIT_GeoInfo';
TAG FIELD [Export Worksheet.UNIT_GeoInfo] WITH '$geopolygon', '$hidden', '$relates_UNIT';

DROP TABLES __countryGeoBase;